

package Main;

import Handles.Database;
import Login.Login;
import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 92311
 */

public class updateToll extends javax.swing.JFrame {

    Database db = null;//to hold the connection state with database
    
    public updateToll(int userID)
    {
        initComponents();
        
        //Establishing connection with database by creating database class object
        db = new Database();
        
        //Set window to max size possible        
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        //current directory
        String dir = System.getProperty("user.dir");
        
        //setting all images correctly
        program.setIcon(new ImageIcon(dir + "\\src\\main\\java\\gear_2.png"));
        home.setIcon(new ImageIcon(dir + "\\src\\main\\java\\home_2_1.png"));
        view.setIcon(new ImageIcon(dir + "\\src\\main\\java\\eye_1.png"));
        tools.setIcon(new ImageIcon(dir + "\\src\\main\\java\\settings_1.png"));
        program_exit.setIcon(new ImageIcon(dir + "\\src\\main\\java\\door_1.png"));
        
        account.setIcon(new ImageIcon(dir + "\\src\\main\\java\\profile_close_3.png"));
        
        profile_box.setIcon(new ImageIcon(dir + "\\src\\main\\java\\account.png"));
        
        
        //=============> Setting header logged in as details
        
        //fetching and storing user data in class static variables
        User.isUser(userID);
        
        //setting text in header
        profile_box.setText(User.user_name.toUpperCase());
        
        //load the table data on launch of the window
        RefreshTableView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        image_container = new javax.swing.JPanel();
        image_con = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        new_category = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        view_categories = new javax.swing.JTable();
        update_category = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        profile_box = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        program = new javax.swing.JMenu();
        program_exit = new javax.swing.JMenuItem();
        home = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        view = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        tools = new javax.swing.JMenu();
        update_toll_tax = new javax.swing.JMenuItem();
        account = new javax.swing.JMenu();
        Logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Toll Plaza Management System");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(21, 34, 56));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Toll Plaza Management System");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout image_containerLayout = new javax.swing.GroupLayout(image_container);
        image_container.setLayout(image_containerLayout);
        image_containerLayout.setHorizontalGroup(
            image_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image_con, javax.swing.GroupLayout.DEFAULT_SIZE, 936, Short.MAX_VALUE)
        );
        image_containerLayout.setVerticalGroup(
            image_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image_con, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        new_category.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        new_category.setText("New Category Entry");
        new_category.setToolTipText("add new vehicle record");
        new_category.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 213, 69), 4, true));
        new_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_categoryActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Toll Taxes For Vehicles");
        jLabel2.setToolTipText("");

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        view_categories.setAutoCreateRowSorter(true);
        view_categories.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        view_categories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vehicle Type", "Toll Tax"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        view_categories.setColumnSelectionAllowed(true);
        view_categories.setEditingColumn(0);
        view_categories.setEditingRow(0);
        view_categories.setEnabled(false);
        view_categories.setFillsViewportHeight(true);
        view_categories.setRowHeight(40);
        view_categories.setSelectionBackground(new java.awt.Color(0, 0, 0));
        view_categories.setSelectionForeground(new java.awt.Color(255, 255, 255));
        view_categories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        view_categories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        view_categories.setShowGrid(false);
        view_categories.setShowHorizontalLines(true);
        view_categories.setSurrendersFocusOnKeystroke(true);
        view_categories.getTableHeader().setResizingAllowed(false);
        view_categories.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(view_categories);

        update_category.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        update_category.setText("Update Category Tax");
        update_category.setToolTipText("update existing category toll tax");
        update_category.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 121, 206), 4, true));
        update_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_categoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(new_category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(update_category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(new_category, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_category, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(250, 255, 255));
        jPanel2.setToolTipText("");

        profile_box.setBackground(new java.awt.Color(255, 255, 255));
        profile_box.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        profile_box.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profile_box.setText("Logged in: Muhammad Bin Zulfiqar");
        profile_box.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(image_container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(image_container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        program_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        program_exit.setText("Exit");
        program_exit.setToolTipText("Exit from the program");
        program_exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        program_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                program_exitActionPerformed(evt);
            }
        });
        program.add(program_exit);

        jMenuBar1.add(program);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Home");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        home.add(jMenuItem1);

        jMenuBar1.add(home);

        view.setText("View");
        view.setToolTipText("");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("All Vehicle Entries");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        view.add(jMenuItem2);

        jMenuBar1.add(view);

        tools.setText("Tools");
        tools.setToolTipText("");

        update_toll_tax.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        update_toll_tax.setText("Update Toll Tax");
        update_toll_tax.setToolTipText("");
        update_toll_tax.setEnabled(false);
        tools.add(update_toll_tax);

        jMenuBar1.add(tools);

        account.setText("Account");
        account.setToolTipText("");

        Logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Logout.setText("Logout");
        Logout.setToolTipText("");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        account.add(Logout);

        jMenuBar1.add(account);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    public void RefreshTableView()
    {
        Object row[] = null; //to hold one row at a time
        ResultSetMetaData columns = null; //to fetch data about columns which is returned with query results
        int total_columns = 0; //to hold the number of columns 
        
        //fecthing control of table
        DefaultTableModel view = (DefaultTableModel) view_categories.getModel();
        
        //reseting table data
        view.setRowCount(0);
        
        //running query on database where table named as CATEGORY
        db.generalQuery("select category_name, category_tax from Category;");
        
        try 
        {
            //fetching column Count
            columns = db.row.getMetaData(); //fetching metadata about the row's cell or columns types, columns names, etc
            total_columns = columns.getColumnCount(); //saving number of columns
        
            //allocating memory to row Object array
            row = new Object[total_columns];
        
            System.out.println(total_columns);
            //point to next row till all rows are readed
            while( db.next() )
            {
                for( int i = 0 ; i < total_columns ; i++ ) //loop through all items of one row
                {
                    row[i] = db.col( columns.getColumnName( (i+1) ) ); //columns index start from 1 so adding 1 in parameter
                }
                
                //adding this row object to the prototype model
                view.addRow(row);
            }
            
            //At the End setting the prototype model to actual table's model place
            view_categories.setModel(view);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(updateToll.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void program_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_program_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_program_exitActionPerformed
    public int times = 0;
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        
        if(this.getExtendedState() == JFrame.MAXIMIZED_BOTH)
        {
            times = 1;
            //image resizer for main bottom section of TOLL PLAZA
            //current directory
            
            String dir = System.getProperty("user.dir");
            ImageIcon icon = new ImageIcon(dir + "\\src\\main\\java\\Toll_plaza.jpg");
            
            Image scaleImage = icon.getImage().getScaledInstance(image_container.getWidth(), image_container.getHeight(),Image.SCALE_DEFAULT);
            System.out.println("resized");
            
            image_con.setIcon(new ImageIcon(scaleImage));
        }
    }//GEN-LAST:event_formComponentResized

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void update_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_categoryActionPerformed
        //taking input category name from user
        String category_name = JOptionPane.showInputDialog(rootPane, 
                "Enter name of vehicle's category", 
                "Updating Vehicle's Category", JOptionPane.QUESTION_MESSAGE);
        
        if( category_name.length() > 0  ) //if he typed some characters
        {
            //first search database is there any category existed with this name
            db.generalQuery("select * from Category where category_name = '"+category_name+"';");
            
            //if exists then run the following below if condition
            if( db.next() )
            {
                //if category exists then take option what he wants to modify
                String option = (String) JOptionPane.showInputDialog(rootPane,"Please Select what you want to update","Choose Updation Criteria",JOptionPane.QUESTION_MESSAGE, new ImageIcon(), new Object[]{"category_name","category_tax"}, 0);
                
                
                if(option != null)
                {
                    Object input = null;
                    Object query_part = null;
                    
                    //first making query for what option user has selected from select menu popup
                    if( option == "category_name" )
                    {
                        //depedning on the option selected user will be prompted to give input according to that option
                        input = JOptionPane.showInputDialog(rootPane, "Please Enter New Category \""+category_name+"\" Name", "Updating Category \""+category_name+"\" Name", JOptionPane.QUESTION_MESSAGE);
                        query_part = "'"+input+"'";
                    }
                    else if( option == "category_tax" )
                    {
                        //depedning on the option selected user will be prompted to give input according to that option
                        input = JOptionPane.showInputDialog(rootPane, "Please Enter New Category \""+category_name+"\" Toll Tax", "Updating Category \""+category_name+"\" Toll Tax", JOptionPane.QUESTION_MESSAGE);
                        query_part = Integer.parseInt(input.toString());
                    }
                    
                    //if user has given some input
                    if ( input != null ) 
                    {
                        //now the record will be updated according to the options and values provided by the user
                        db.IUDQuery("update Category set "+option+" = " + query_part + " where category_name = '" + category_name + "';");
                        //display operation successful message
                        JOptionPane.showMessageDialog(rootPane,
                                "Vehicle Category has been updated successfully!",
                                "Category Updated Successful", JOptionPane.INFORMATION_MESSAGE);
                    } 
                }
                //after deletion refresh the table contents
                RefreshTableView();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, 
                        "Category Does Not Exists By This Name: "+category_name, 
                        "Category Does Not Exists", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, 
                    "You haven't typed and category name", 
                    "Validation Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_update_categoryActionPerformed

    private void new_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_categoryActionPerformed
        //taking input category name from user
        String category_name = JOptionPane.showInputDialog(rootPane,"Enter name of vehicle's category","Adding Vehicle's Category Toll tax", JOptionPane.QUESTION_MESSAGE);
        
        if( category_name.length() > 0  ) //if he typed some characters
        {
            //first search database is there any category existed with this name
            db.generalQuery("select * from Category where category_name = '"+category_name+"';");
            
            //if does not exists then run the following below if condition
            if( !db.next() )
            {
                String category_tax = JOptionPane.showInputDialog(rootPane, "Please Enter New Category \""+category_name+"\" Tax", "Adding New Category \""+category_name+"\" Tax", JOptionPane.QUESTION_MESSAGE);
                
                if( category_tax.length() > 0 )
                {
                    //if user has given some input
                    
                        //now the record will be updated according to the options and values provided by the user
                        db.IUDQuery("insert into Category values ('"+ category_name +"',"+ category_tax +");");
                        //display operation successful message
                        JOptionPane.showMessageDialog(rootPane,"Vehicle Category has been added successfully!","Category Added Successful", JOptionPane.INFORMATION_MESSAGE);    
                }
                //after deletion refresh the table contents
                RefreshTableView();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Category Does Exists By This Name: "+category_name +" Already","Category Already Exists", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_new_categoryActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Toll(User.user_no).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //opening all records view
        new View(User.user_no).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateToll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateToll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateToll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateToll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateToll(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Logout;
    private javax.swing.JMenu account;
    private javax.swing.JMenu home;
    private javax.swing.JLabel image_con;
    private javax.swing.JPanel image_container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton new_category;
    private javax.swing.JLabel profile_box;
    private javax.swing.JMenu program;
    private javax.swing.JMenuItem program_exit;
    private javax.swing.JMenu tools;
    private javax.swing.JButton update_category;
    private javax.swing.JMenuItem update_toll_tax;
    private javax.swing.JMenu view;
    private javax.swing.JTable view_categories;
    // End of variables declaration//GEN-END:variables
}
