

package Main;

import Handles.Database;
import Login.Login;
import com.toedter.calendar.*;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 92311
 */

public class View extends javax.swing.JFrame {

    Database db = null;//to hold the connection state with database
    
    //strings to hold values for fields
    String from_dates,to_dates,from_hours,to_hours,from_minutes,to_minutes,from_seconds,to_seconds;
    
    public View(int userID)
    {
        initComponents();
        
        //Establishing connection with database by creating database class object
        db = new Database();
        userID=1;
        //Set window to max size possible        
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        //current directory
        String dir = System.getProperty("user.dir");
        
        //setting all images correctly
        program.setIcon(new ImageIcon(dir + "\\src\\main\\java\\gear_2.png"));
        home.setIcon(new ImageIcon(dir + "\\src\\main\\java\\home_2_1.png"));
        view.setIcon(new ImageIcon(dir + "\\src\\main\\java\\eye_1.png"));
        tools.setIcon(new ImageIcon(dir + "\\src\\main\\java\\settings_1.png"));
        program_exit.setIcon(new ImageIcon(dir + "\\src\\main\\java\\door_1.png"));
        
        account.setIcon(new ImageIcon(dir + "\\src\\main\\java\\profile_close_3.png"));
        
        profile_box.setIcon(new ImageIcon(dir + "\\src\\main\\java\\account.png"));
        
        
        //=============> Setting header logged in as details
        
        //fetching and storing user data in class static variables
        User.isUser(userID);
        
        //setting text in header
        profile_box.setText(User.user_name.toUpperCase());
        
        //loading latest categories in combo box
        comboLoaderFromDatabase();
        
        //setting extra time combos values
        HoursMinutesSecondsComboLoader();
        
        //set default date values on which default view of records will be displayed
        defaultDateTimeSetter();
        
        //load the table data on launch of the window
        RefreshTableView();
       
        //setting FROM section maximum range equal to To section date
        System.out.println(from_date.getMaxSelectableDate());
        Date max;
        try {
            max = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(to_dates+" "+to_hours+":"+to_minutes+":"+to_seconds);
            from_date.getDateEditor().setMaxSelectableDate(max);
            from_date.setMaxSelectableDate(max);
        } 
        catch (ParseException ex) 
        {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        view_categories = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        vehicle_type = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        from = new javax.swing.JPanel();
        from_date = new com.toedter.calendar.JDateChooser();
        from_minute = new javax.swing.JComboBox<>();
        from_second = new javax.swing.JComboBox<>();
        from_hour = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        from1 = new javax.swing.JPanel();
        to_date = new com.toedter.calendar.JDateChooser();
        to_hour = new javax.swing.JComboBox<>();
        to_minute = new javax.swing.JComboBox<>();
        to_second = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        profile_box = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        program = new javax.swing.JMenu();
        program_exit = new javax.swing.JMenuItem();
        home = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        view = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        tools = new javax.swing.JMenu();
        update_toll_tax = new javax.swing.JMenuItem();
        account = new javax.swing.JMenu();
        Logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Toll Plaza Management System");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(21, 34, 56));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Toll Plaza Management System");
        jLabel1.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("All Vehicles Toll Record");
        jLabel2.setToolTipText("");

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        view_categories.setAutoCreateRowSorter(true);
        view_categories.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        view_categories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vehicle Entry Number", "Vehicle Plate Number", "Category", "Recieved", "Change", "Tax", "Date", "Added By"
            }
        ));
        view_categories.setColumnSelectionAllowed(true);
        view_categories.setEditingColumn(0);
        view_categories.setEditingRow(0);
        view_categories.setEnabled(false);
        view_categories.setFillsViewportHeight(true);
        view_categories.setRowHeight(40);
        view_categories.setSelectionBackground(new java.awt.Color(0, 0, 0));
        view_categories.setSelectionForeground(new java.awt.Color(255, 255, 255));
        view_categories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        view_categories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        view_categories.setShowGrid(false);
        view_categories.setShowHorizontalLines(true);
        view_categories.setSurrendersFocusOnKeystroke(true);
        view_categories.getTableHeader().setResizingAllowed(false);
        view_categories.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(view_categories);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Search By Filters");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText("Category");
        jLabel4.setToolTipText("");

        vehicle_type.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("From");
        jLabel5.setToolTipText("");

        from_date.setDateFormatString("yyyy-MM-dd\n");
        from_date.setMaxSelectableDate(new java.util.Date(253370750473000L));

        javax.swing.GroupLayout fromLayout = new javax.swing.GroupLayout(from);
        from.setLayout(fromLayout);
        fromLayout.setHorizontalGroup(
            fromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
            .addGroup(fromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(from_date, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
        );
        fromLayout.setVerticalGroup(
            fromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(fromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(from_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
        );

        from_minute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minutes" }));

        from_second.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seconds" }));

        from_hour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hours" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("To");
        jLabel6.setToolTipText("");

        to_date.setDateFormatString("yyyy-MM-dd\n");

        javax.swing.GroupLayout from1Layout = new javax.swing.GroupLayout(from1);
        from1.setLayout(from1Layout);
        from1Layout.setHorizontalGroup(
            from1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(to_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
        );
        from1Layout.setVerticalGroup(
            from1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(to_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        to_hour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hours" }));

        to_minute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minutes" }));

        to_second.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seconds" }));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Search");
        jButton2.setToolTipText("");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 222, 82), 3));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vehicle_type, 0, 211, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addGap(297, 297, 297))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(from_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(from_minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(from_second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                .addGap(481, 481, 481))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(from1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(to_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(to_minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(to_second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(to_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(to_minute, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(to_second, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(451, 451, 451))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vehicle_type)
                            .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(from_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(from_minute, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(from_second, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(from1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel2.setBackground(new java.awt.Color(250, 255, 255));
        jPanel2.setToolTipText("");

        profile_box.setBackground(new java.awt.Color(255, 255, 255));
        profile_box.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        profile_box.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profile_box.setText("Logged in: Muhammad Bin Zulfiqar");
        profile_box.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile_box, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        program.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programActionPerformed(evt);
            }
        });

        program_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        program_exit.setText("Exit");
        program_exit.setToolTipText("Exit from the program");
        program_exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        program_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                program_exitActionPerformed(evt);
            }
        });
        program.add(program_exit);

        jMenuBar1.add(program);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Home");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        home.add(jMenuItem1);

        jMenuBar1.add(home);

        view.setText("View");
        view.setToolTipText("");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("All Vehicle Entries");
        jMenuItem2.setEnabled(false);
        view.add(jMenuItem2);

        jMenuBar1.add(view);

        tools.setText("Tools");
        tools.setToolTipText("");

        update_toll_tax.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        update_toll_tax.setText("Update Toll Tax");
        update_toll_tax.setToolTipText("");
        update_toll_tax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_toll_taxActionPerformed(evt);
            }
        });
        tools.add(update_toll_tax);

        jMenuBar1.add(tools);

        account.setText("Account");
        account.setToolTipText("");

        Logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Logout.setText("Logout");
        Logout.setToolTipText("");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        account.add(Logout);

        jMenuBar1.add(account);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    public void comboLoaderFromDatabase()
    {
        
        
        //fetching latest all vehicle categories from database with their taxes
        db.generalQuery("select category_No,category_name,category_tax from Category;");
        
        vehicle_type.addItem( "All" );
        while(db.next())
        {
            
            //setting combo box items one by one by fetching them
            vehicle_type.addItem( db.col("category_name").toString() );
        }
        
    }
    
    public void HoursMinutesSecondsComboLoader()
    {
        //setting hours combos
        for (int i = 0; i < 24; i++) 
        {
            from_hour.addItem(i+"");
            to_hour.addItem(i+"");
        }
        
        //setting minutes and seconds combos
        for (int i = 0; i < 60; i++) 
        {
            from_minute.addItem(i+"");
            to_minute.addItem(i+"");
            
            from_second.addItem(i+"");
            to_second.addItem(i+"");
        }
    }
    
    public void defaultDateTimeSetter()
    {
        //turning manual date editing in date text box
        from_date.getDateEditor().setEnabled(false);
        to_date.getDateEditor().setEnabled(false);
        
        //current time
        Calendar today_date_time = Calendar.getInstance(); //fetching current date
        
        Calendar yesterday_date_time = Calendar.getInstance(); //current date
        yesterday_date_time.add( Calendar.DAY_OF_MONTH, -1); //minusing one day from current date
        
        //Getting Formated Dates for today and yesterday
        to_dates = new SimpleDateFormat("yyyy-MM-dd").format(today_date_time.getTime());
        from_dates = new SimpleDateFormat("yyyy-MM-dd").format(yesterday_date_time.getTime());
            
        //setting date fields
        to_date.setCalendar(today_date_time);
        from_date.setCalendar(yesterday_date_time);
        
        //getting hours
        from_hours = today_date_time.get(Calendar.HOUR_OF_DAY)+"";
        to_hours = yesterday_date_time.get(Calendar.HOUR_OF_DAY)+"";
        
        //setting hours combos
        from_hour.setSelectedItem(from_hours); 
        to_hour.setSelectedItem(to_hours);
        
        //getting minutes
        from_minutes = today_date_time.get(Calendar.MINUTE)+"";
        to_minutes = yesterday_date_time.get(Calendar.MINUTE)+"";
        
        //setting minutes combos
        from_minute.setSelectedItem(from_minutes);
        to_minute.setSelectedItem(to_minutes);
        
        //getting seconds
        from_seconds = today_date_time.get(Calendar.SECOND)+"";
        to_seconds = yesterday_date_time.get(Calendar.SECOND)+"";
        
        //setting seconds combos
        from_second.setSelectedItem(from_seconds);
        to_second.setSelectedItem(to_seconds);
    }
    
    public void updateDateTimeHoldingVairable()
    {
        //Getting Formated Dates for today and yesterday
        to_dates = ((JTextField) to_date.getDateEditor().getUiComponent()).getText();
        from_dates = ((JTextField) from_date.getDateEditor().getUiComponent()).getText();
        
        //getting hours
        from_hours = from_hour.getSelectedItem().toString();
        to_hours = to_hour.getSelectedItem().toString();
        
        //getting minutes
        from_minutes = from_minute.getSelectedItem().toString();
        to_minutes = to_minute.getSelectedItem().toString();
        
        //getting seconds
        from_seconds = from_second.getSelectedItem().toString();
        to_seconds = to_second.getSelectedItem().toString();
    }
    
    public boolean ValidateFields()
    {
        //updating all variables that are holding dat time values for (from and to) sections
        updateDateTimeHoldingVairable(); //because we are going to validate them
        
        if ( from_dates.length()==0 || to_dates.length()==0 || from_hours=="Hours" || to_hours=="Hours" || from_minutes=="Minutes" || to_minutes=="Minutes" || from_seconds=="Seconds" || to_seconds=="Seconds" ) 
        {
            //display message any fields is empty
            JOptionPane.showMessageDialog(rootPane, "Please Fill All the Fields", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } 
        else 
        {
            return true;
        }
    }
    
    public void RefreshTableView()
    {
        //first we have to validate if all fields are filled or not
        if(!ValidateFields()) //if any field is empty return
            return;
        
        Object row[] = new Object[8]; //to hold one row at a time total columns are 
        
        //fecthing control of table
        DefaultTableModel view = (DefaultTableModel) view_categories.getModel();
        
        //reseting table data
        view.setRowCount(0);
        
        //fetching category criteria
        String category_selected = vehicle_type.getSelectedItem().toString();
        if(category_selected == "All") category_selected = "";
        else category_selected = "Category = '"+category_selected+"' AND";
        
        //fetching date section criteria
        String from_criteria = "Dated >= '" + from_dates + " " + from_hours+":" + from_minutes+":" + from_seconds + "'"; //fetching dates string from global variable declared at top 
        String to_criteria = "Dated <= '" + to_dates + " " + to_hours+":" + to_minutes+":" + to_seconds + "'";
        
        //preparing search query (it will search for the records that are added within these dates having category specified)
        String query = "select * from Toll_Plaza.dbo.Toll_Record_Details where "+ category_selected + " " + from_criteria + " AND " + to_criteria +";";
        System.out.println(query);
        //running query on database where View named as Toll_Details_Record
        db.generalQuery(query);
        
        try 
        {
            //point to next row till all rows are readed
            while( db.next() )
            {
                for( int i = 0 ; i < 8 ; i++ ) //loop through all items of one row
                {
                    row[i] = db.col( db.row.getMetaData().getColumnName( (i+1) ) ); //columns index start from 1 so adding 1 in parameter
                }
                
                //adding this row object to the prototype model
                view.addRow(row);
            }
            
            //At the End setting the prototype model to actual table's model place
            view_categories.setModel(view);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void program_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_program_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_program_exitActionPerformed
  
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        
    }//GEN-LAST:event_formComponentResized

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Toll(User.user_no).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RefreshTableView(); //if user pressed search buttn
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyTyped
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            RefreshTableView();//if user pressed eneter while focusing in search button
        }
    }//GEN-LAST:event_jButton2KeyTyped

    private void update_toll_taxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_toll_taxActionPerformed
        //transfer control to update toll form
        new updateToll(User.user_no).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_update_toll_taxActionPerformed

    private void programActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programActionPerformed
        System.exit(0);
    }//GEN-LAST:event_programActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Logout;
    private javax.swing.JMenu account;
    private javax.swing.JPanel from;
    private javax.swing.JPanel from1;
    private com.toedter.calendar.JDateChooser from_date;
    private javax.swing.JComboBox<String> from_hour;
    private javax.swing.JComboBox<String> from_minute;
    private javax.swing.JComboBox<String> from_second;
    private javax.swing.JMenu home;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel profile_box;
    private javax.swing.JMenu program;
    private javax.swing.JMenuItem program_exit;
    private com.toedter.calendar.JDateChooser to_date;
    private javax.swing.JComboBox<String> to_hour;
    private javax.swing.JComboBox<String> to_minute;
    private javax.swing.JComboBox<String> to_second;
    private javax.swing.JMenu tools;
    private javax.swing.JMenuItem update_toll_tax;
    private javax.swing.JComboBox<String> vehicle_type;
    private javax.swing.JMenu view;
    private javax.swing.JTable view_categories;
    // End of variables declaration//GEN-END:variables
}
